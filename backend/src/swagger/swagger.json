{
  "swagger": "2.0",
  "info": {
    "title": "Hospital management system API",
    "version": "v0.0.1",
    "description": "A RMIT Database application assignment"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "authStr": {
      "type": "apiKey",
      "name": "x-auth-string",
      "scheme": "bearer",
      "in": "header"
    }
  },
  "paths": {
    "/api/auth/publicToken": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get auth public key",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/errSchema"
            },
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/patient/": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Get all patients",
        "description": "",
        "parameters": [
          {
            "name": "order",
            "in": "query",
            "description": "Query order",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/errSchema"
            },
            "description": "Bad Request"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/serverErrSchema"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Patients"
        ],
        "summary": "Create new patients",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Add new patients.",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string",
                  "example": "Van A"
                },
                "last_name": {
                  "type": "string",
                  "example": "Nguyen"
                },
                "date_of_birth": {
                  "type": "string",
                  "example": "01-01-2000"
                },
                "contact_info": {
                  "type": "string",
                  "example": "0912789JQK"
                },
                "address": {
                  "type": "string",
                  "example": "Nguyen Van Linh"
                },
                "allergies": {
                  "type": "string",
                  "example": "peanut"
                }
              },
              "required": [
                "first_name",
                "last_name",
                "date_of_birth",
                "contact_info",
                "address",
                "allergies"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/errSchema"
            },
            "description": "Bad Request"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/serverErrSchema"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/patient/id/{id}": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Search patient by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Patient ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/errSchema"
            },
            "description": "Bad Request"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/serverErrSchema"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/patient/name/{name}": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Search patients by name",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Patient name (will search lastname and firstname)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/errSchema"
            },
            "description": "Bad Request"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/serverErrSchema"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/patient/{id}": {
      "put": {
        "tags": [
          "Patients"
        ],
        "summary": "Update Patient info",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Patient ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/errSchema"
            },
            "description": "Bad Request"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/serverErrSchema"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Patients"
        ],
        "summary": "(Soft) Delete patient info",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Patient ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/errSchema"
            },
            "description": "Bad Request"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/serverErrSchema"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/staff/": {
      "get": {
        "tags": [
          "Staff"
        ],
        "summary": "Get all staffs",
        "description": "",
        "parameters": [
          {
            "name": "order",
            "in": "query",
            "description": "Query order",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/staff/department/{depId}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "summary": "Get all staffs by department ID",
        "description": "",
        "parameters": [
          {
            "name": "depId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Department ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/staff/schedule/{staffId}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "summary": "Get a staff",
        "description": "",
        "parameters": [
          {
            "name": "staffId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Staff ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/appointment/": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "summary": "Get all appointments",
        "description": "",
        "parameters": [
          {
            "name": "staffId",
            "in": "query",
            "description": "Query Staff ID (INT)",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/appointment/schedule": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "summary": "View working schedule of all doctors for a given duration (with busy or available status)",
        "description": "",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "description": "Query start time",
            "default": "2024-08-11 12:00:00",
            "type": "string"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "Query end time",
            "default": "2024-08-12 12:30:00",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/treatment/": {
      "get": {
        "tags": [
          "Treatments"
        ],
        "summary": "Get all treatments",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/report/patientTreatmentHistory": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "View a patient treatment history for a given duration & View all patient treatment in a given duration",
        "description": "",
        "parameters": [
          {
            "name": "patientId",
            "in": "query",
            "description": "Query Staff ID (INT)",
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Query start time",
            "default": "2024-08-11",
            "type": "string"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "Query end time",
            "default": "2024-08-12",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/report/jobHistory/{staffId}": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "View job change history of a staff",
        "description": "",
        "parameters": [
          {
            "name": "staffId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Staff ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/report/doctorWorkHistory": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "View the work of a doctor in a given duration & View the work of all doctors in a given duratio",
        "description": "",
        "parameters": [
          {
            "name": "staffId",
            "in": "query",
            "description": "Query Staff ID (INT)",
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Query start time",
            "default": "2024-08-11",
            "type": "string"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "Query end time",
            "default": "2024-08-12",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "requiredAuth": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "username"
        },
        "password": {
          "type": "string",
          "example": "password"
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "serverErrSchema": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Internal server error"
        }
      },
      "required": [
        "message"
      ]
    },
    "errSchema": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Your error, not mine"
        }
      },
      "required": [
        "message"
      ]
    }
  },
  "security": [
    {
      "authStr": []
    }
  ]
}